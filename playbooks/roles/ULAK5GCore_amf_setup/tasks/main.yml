- name: Check mandatory variables are defined
  assert:
    that:
         - container_name is defined
         - nrf_container_name is defined        
  when: deployment_type == "cnf"

- name: Get mongo deployment type
  set_fact:
        mongo_deployment_type: "{{hostvars[groups['mongodb'].0].deployment_type}}"
        
- block:
    - name: Get  ip address of amf container
      ansible.builtin.include_role:
        name: get_container_ip_info
      vars:
        container: "{{container_name}}"
    - name: updated control ip address
      set_fact:
        control_ip: "{{container_ip.stdout}}"
    - name: Get  ip address of nrf container
      ansible.builtin.include_role:
        name: get_container_ip_info
      vars:
        container: "{{nrf_container_name}}"
    - name: updated nrf ip address
      set_fact:
        nrf_ip: "{{container_ip.stdout}}"    
    - name: Get config mount  of container
      ansible.builtin.include_role:
        name: get_container_mount_info
  when: deployment_type == "cnf"

- block:
    - name: set mongo db ip as variable
      set_fact:
        mongo_db_ip: "{{hostvars[groups['mongodb'].0].ansible_host}}"
    - name: amf list operation starting...
      ansible.builtin.include_tasks:
        file: ULAK5G_core_amf_vnf_mongodb_worker.yml
  when: mongo_deployment_type == "vnf" 

- block:
    - name: Get mongo container name
      set_fact:
        mongo_container_name: "{{hostvars[groups['mongodb'].0].container_name}}" 
    - name: Get  ip address of mongo container
      ansible.builtin.include_role:
        name: get_container_ip_info
      vars:
        container: "{{mongo_container_name}}"
    - name: updated mongodb ip address
      set_fact:
        mongo_db_ip: "{{container_ip.stdout}}" 
    - name: amf list operation starting...
      ansible.builtin.include_tasks:
        file: ULAK5G_core_amf_cnf_mongodb_worker.yml      
  when: mongo_deployment_type == "cnf" 
    
- name: Template amf settings file
  template: src=amf_settings_json.j2 dest="{{each_config_file.path}}/{{each_config_file.filename}}"
  diff: yes
  with_items: "{{ conf_files }}"
  when: each_config_file.filename == "settings.json"
  loop_control:
       loop_var: each_config_file

- block:
    - name: service stop
      ansible.builtin.include_role:
        name: service_operations
      vars:
        operation: stop
        service_name: "{{item}}"
      with_items: "{{service_names}}"
    - name: service start
      ansible.builtin.include_role:
        name: service_operations
      vars:
        operation: start
        service_name: "{{item}}"
      with_items: [ cnramf ]
  when: deployment_type == "vnf"

- block:
   - name: stop cnf
     ansible.builtin.command: docker stop "{{container_name}}"
   - name: start cnf
     ansible.builtin.command: docker start "{{container_name}}"
  when: deployment_type == "cnf"
